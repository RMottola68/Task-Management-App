{"version":3,"sources":["Nav.js","Tasks.js","About.js","Contacts.js","Task.js","TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["nav","props","className","exact","activeClassName","activeStyle","textDecoration","textDecorationColor","to","Tasks","setInputText","tasks","setTasks","inputText","setStatus","type","placeholder","value","onChange","e","target","onClick","text","completed","id","Math","random","name","About","Contacts","contacts","setContacts","firstName","setFirstName","lastName","setLastName","email","setEmail","for","preventDefault","Task","task","map","item","filter","el","TaskList","filteredTasks","style","listStyleType","App","useState","status","setFilteredTasks","useEffect","getLocalTasks","filterHandler","saveLocalTasks","localStorage","setItem","JSON","stringify","getItem","localTasks","parse","path","Nav","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6203725.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nconst nav = (props) => {\r\n    return (\r\n        <div className='Nav'>\r\n            <div className={'navbar bg-primary border-bottom justify-content-center'}>\r\n                <ul>\r\n                    <li className={'d-inline-flex px-2 px-sm-5 align-middle'}>\r\n                        <NavLink exact={true} activeClassName='is-active' activeStyle={{textDecoration: 'underline', textDecorationColor: 'white'}} to='/About'>\r\n                        <span className={'text-light font-weight-bold pointer'}>About</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={'d-inline-flex px-2 px-sm-5 align-middle'}>\r\n                        <NavLink activeClassName='is-active' activeStyle={{textDecoration: 'underline', textDecorationColor: 'white'}} to='/Tasks'>\r\n                        <span className={'text-light font-weight-bold'}>Tasks</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={'d-inline-flex px-2 px-sm-5 align-middle'}>\r\n                        <NavLink activeClassName='is-active' activeStyle={{textDecoration: 'underline', textDecorationColor: 'white'}} to='/Contacts'>\r\n                        <span className={'text-light font-weight-bold'}>Contacts</span>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default nav;\r\n\r\n","import React from 'react';\r\n\r\nconst Tasks = ({ setInputText, tasks, setTasks, inputText, setStatus }) => {\r\n    \r\n    const inputTaskHandler = (e) => {\r\n        setInputText(e.target.value); \r\n    };\r\n\r\n    const submitTaskHandler = (e) => {\r\n        setTasks([\r\n            ...tasks, {text: inputText, completed: false, id: Math.random() * 100}\r\n        ])\r\n        setInputText('');\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    \r\n    return (    \r\n\r\n        <div className='py-3 m-5'>\r\n            <div className={'d-flex justify-content-center'}>\r\n                    <input type=\"text\" placeholder={'Enter Task Here'} className={'p-1 mx-2 w-100'} value={inputText} onChange={inputTaskHandler}></input>\r\n                    <button onClick={submitTaskHandler}  type={'primary'} className={'taskButton btn btn-primary'}>Add</button>\r\n                    <div >\r\n                        <select name='tasks' className={'p-2'} onChange={statusHandler}>\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            <option value=\"active\">Active</option>\r\n                        </select>\r\n                    </div>             \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import React from 'react';\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <h2 className='d-flex justify-content-center' >Enter, complete, and delete tasks at your leisure. </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contacts = ({ contacts, setContacts, firstName, setFirstName, lastName, setLastName, email, setEmail }) => {\r\n\r\n    const inputFirstHandler = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const inputLastHandler = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n\r\n    const inputEmailHandler = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n     const submitContactHandler = (e) => {\r\n        e.preventDefault()\r\n        setContacts([\r\n            ...contacts, {firstName: firstName, lastName: lastName, email:email}\r\n        ])\r\n        setFirstName('');\r\n        setLastName('');\r\n        setEmail('');\r\n    }\r\n\r\n    return (\r\n\r\n        \r\n        \r\n        <div className={'p-3 m-2'}>\r\n            <h2 className={'text-center'}>Contact List</h2>\r\n            <form>\r\n                <div className={'form-group'}>\r\n                    <label for={'firstName'}>First Name</label>\r\n                    <input className={'form-control'} type={'text'} onChange={inputFirstHandler} value={firstName}/>                \r\n                </div>\r\n                \r\n                <div className={'form-group'}>\r\n                    <label for={'lastName'}>Last Name</label>\r\n                    <input className={'form-control'} type={'text'} onChange={inputLastHandler} value={lastName}/>                \r\n                </div>\r\n                \r\n                <div className={'form-group  '}>\r\n                    <label for={'phoneNum'}>Email</label>\r\n                    <input className={'form-control'} type={'text'} onChange={inputEmailHandler} value={email}/>                \r\n                </div>\r\n                <button type={'primary'} className={'btn btn-primary mt-3 ml-1'} onClick={submitContactHandler}>Submit</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\n\r\nconst Task = ({ text, task, tasks, setTasks }) => {\r\n    const deleteHandler = () => {\r\n        setTasks(tasks.filter(el => el.id !== task.id))\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTasks(tasks.map(item => {\r\n            if(item.id === task.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        })\r\n        );   \r\n    }\r\n\r\n    return (\r\n        <div className='task border-bottom'>\r\n            <li className={`task-item ${task.completed ? 'completed' : ''}`}>{text}</li> \r\n            <button type='success' className={'btn btn-success'} onClick={completeHandler}>\r\n                <i className={'fas fa-check'}></i>\r\n            </button>\r\n            <button onClick={deleteHandler} type={'button'} className='btn btn-danger m-2'>\r\n                <i className='fas fa-trash'></i>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nconst TaskList = ({ tasks, setTasks, filteredTasks }) => {\r\n\r\n    return(\r\n        <div className={'bg-light m-5 p-3 d-flex'}>\r\n            <ul style={{listStyleType:'none'}}>\r\n                {filteredTasks.map(task => (\r\n                    <Task \r\n                    setTasks={setTasks} \r\n                    key={task.id}\r\n                    tasks={tasks}\r\n                    task={task}\r\n                    text={task.text} \r\n                    id={task.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TaskList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport Tasks from './Tasks';\nimport About from './About';\nimport Contacts from './Contacts';\nimport TaskList from './TaskList';\nimport Task from './Task';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n    Redirect\n  } from \"react-router-dom\";\n\n\nfunction App() { \n\n    const [inputText, setInputText] = useState('');\n    const [tasks, setTasks] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contacts, setContacts] = useState([]);\n    \n    useEffect(() => {\n        getLocalTasks();\n    }, []);\n\n    useEffect(() => {\n        filterHandler();\n        saveLocalTasks();\n    }, [tasks, status]);\n\n    const filterHandler = () => {\n        switch(status){\n            case'completed': setFilteredTasks(tasks.filter(task => task.completed === true))\n            break;\n            case 'active': setFilteredTasks(tasks.filter(task => task.completed === false))\n            break;\n            default: setFilteredTasks(tasks);\n            break;\n        }\n    }\n\n    const saveLocalTasks = () => {        \n            localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    const getLocalTasks = () => {\n        if(localStorage.getItem('tasks') === null){\n            localStorage.setItem('tasks', JSON.stringify([]));\n        } else {\n            let localTasks = JSON.parse(localStorage.getItem('tasks'));\n            setTasks(localTasks);\n        }\n    }\n\n    return(\n        <Router>\n            <Route exact path=\"/\">\n                <Redirect to=\"/About\" />\n            </Route>\n                    \n            <div className='App'>\n                <Nav />\n                \n                <Switch>\n                <Route path='/About'>\n                    <About />\n                </Route>\n                <Route path='/Tasks'>\n                    <Tasks \n                    inputText={inputText}\n                    tasks={tasks}\n                    setTasks={setTasks}\n                    setInputText={setInputText}\n                    setStatus={setStatus}                    \n                    />\n                    \n                    <TaskList \n                    setTasks={setTasks} \n                    tasks={tasks}\n                    filteredTasks={filteredTasks}\n                    />\n                </Route>\n                <Route path='/Contacts'>\n                    <Contacts \n                    firstName={firstName}\n                    lastName={lastName}\n                    email={email}\n                    setLastName={setLastName}\n                    setFirstName={setFirstName}\n                    setEmail={setEmail}\n                    contacts={contacts}\n                    setContacts={setContacts}\n                    />\n                </Route>              \n\n                </Switch>    \n            </div>          \n        </Router>\n        \n    )\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}